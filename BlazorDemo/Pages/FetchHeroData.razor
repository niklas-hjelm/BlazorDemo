@page "/fetchherodata"

<PageTitle>Heroes Page</PageTitle>

@using BlazorDemo.Data
@inject HeroRepository _heroRepository

<h1>Heroes Page</h1>

<p>Add another Hero:</p>

<p>
    <input @bind="Hero.Name"/>
</p>

<p>
    <input @bind="Hero.HeroName"/>
</p>
<p>
    <input @bind="Hero.Powers"/>
</p>
<button class="btn btn-primary" @onclick="AddHero">Save</button>

<p>
    <input @bind="Id"/>
</p>
<button class="btn btn-danger" @onclick="DeleteHero">Delete</button>


<p>These are our heroes.</p>

@if (_heroes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Hero Name</th>
                <th>Powers</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var hero in _heroes)
            {
                <tr>
                    <td>@hero.Id</td>
                    <td>@hero.Name</td>
                    <td>@hero.HeroName</td>
                    <td>
                        @foreach (var power in @hero.Powers.Split(','))
                        {
                            <p>@power</p>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public int Id { get; set; }

    public Hero Hero { get; set; } = new();

    private ICollection<Hero>? _heroes;

    protected override async Task OnInitializedAsync()
    {
        _heroes = _heroRepository.GetAllHeroes();
    }

    private async Task AddHero()
    {
        _heroRepository.CreateHero(Hero.CopyHero(Hero));
        _heroes = _heroRepository.GetAllHeroes();
    }

    private void DeleteHero()
    {
        _heroRepository.DeleteHero(Id);
        _heroes = _heroRepository.GetAllHeroes();
    }

}
